openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/dashboard/:
    get:
      operationId: listDashboards
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/v1/sponsors/:
    get:
      operationId: listSponsorModels
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - new
          - approved
          - moderation
          - canceled
      - name: choice_money
        required: false
        in: query
        description: choice_money
        schema:
          type: string
          enum:
          - '1_000_000'
          - '5_000_000'
          - '7_000_000'
          - '10_000_000'
          - '30_000_000'
      - name: updated_date
        required: false
        in: query
        description: updated_date
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Sponsor'
          description: ''
      tags:
      - api
    post:
      operationId: createSponsorModel
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sponsor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sponsor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sponsor'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sponsor'
          description: ''
      tags:
      - api
  /api/v1/sponsors/{id}/:
    get:
      operationId: retrieveSponsorModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Sponsor.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sponsor'
          description: ''
      tags:
      - api
    put:
      operationId: updateSponsorModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Sponsor.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sponsor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sponsor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sponsor'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sponsor'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSponsorModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Sponsor.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sponsor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sponsor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sponsor'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sponsor'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySponsorModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Sponsor.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/university/:
    get:
      operationId: listUniversityModels
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/University'
          description: ''
      tags:
      - api
    post:
      operationId: createUniversityModel
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/University'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/University'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/University'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/University'
          description: ''
      tags:
      - api
  /api/v1/students/:
    get:
      operationId: listStudentModels
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: student_type
        required: false
        in: query
        description: student_type
        schema:
          type: string
          enum:
          - Bachelor
          - Master
          - Phd
      - name: university
        required: false
        in: query
        description: university
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Student'
          description: ''
      tags:
      - api
    post:
      operationId: createStudentModel
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
      tags:
      - api
  /api/v1/students/{id}/:
    get:
      operationId: retrieveStudentModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Student.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
      tags:
      - api
    put:
      operationId: updateStudentModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Student.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateStudentModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Student.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyStudentModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Student.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/sponsorships/:
    get:
      operationId: listSponsorshipModels
      description: ''
      parameters:
      - name: p
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?p=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?p=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Sponsorship'
          description: ''
      tags:
      - api
    post:
      operationId: createSponsorshipModel
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sponsorship'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sponsorship'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sponsorship'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sponsorship'
          description: ''
      tags:
      - api
  /api/v1/sponsorships/{id}/:
    get:
      operationId: retrieveSponsorshipModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Sponsorship.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sponsorship'
          description: ''
      tags:
      - api
    put:
      operationId: updateSponsorshipModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Sponsorship.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sponsorship'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sponsorship'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sponsorship'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sponsorship'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSponsorshipModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Sponsorship.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sponsorship'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sponsorship'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sponsorship'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sponsorship'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySponsorshipModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Sponsorship.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/token/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/v1/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
components:
  schemas:
    Sponsor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        person_type:
          enum:
          - legal
          - physical
          type: string
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        father_name:
          type: string
          maxLength: 100
        sponsor_number:
          type: string
          nullable: true
          maxLength: 13
        enter_money:
          type: integer
          nullable: true
        choice_money:
          enum:
          - '1_000_000'
          - '5_000_000'
          - '7_000_000'
          - '10_000_000'
          - '30_000_000'
          type: string
          nullable: true
        company_name:
          type: string
          nullable: true
          maxLength: 200
      required:
      - person_type
      - first_name
      - last_name
      - father_name
    University:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 250
      required:
      - name
    Student:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        father_name:
          type: string
          maxLength: 100
        student_number:
          type: string
          nullable: true
          maxLength: 200
        university:
          type: integer
        student_type:
          enum:
          - Bachelor
          - Master
          - Phd
          type: string
        contract:
          type: integer
        sponsored_money:
          type: string
          readOnly: true
        sponsors:
          type: string
          maxLength: 200
      required:
      - first_name
      - last_name
      - father_name
      - university
      - student_type
      - contract
      - sponsors
    Sponsorship:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sponsor:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            person_type:
              enum:
              - legal
              - physical
              type: string
            first_name:
              type: string
              maxLength: 100
            last_name:
              type: string
              maxLength: 100
            father_name:
              type: string
              maxLength: 100
            sponsor_number:
              type: string
              nullable: true
              maxLength: 13
            enter_money:
              type: integer
              nullable: true
            choice_money:
              enum:
              - '1_000_000'
              - '5_000_000'
              - '7_000_000'
              - '10_000_000'
              - '30_000_000'
              type: string
              nullable: true
            company_name:
              type: string
              nullable: true
              maxLength: 200
          required:
          - person_type
          - first_name
          - last_name
          - father_name
          readOnly: true
        sponsor_id:
          type: integer
          writeOnly: true
        student:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            first_name:
              type: string
              maxLength: 100
            last_name:
              type: string
              maxLength: 100
            father_name:
              type: string
              maxLength: 100
            student_number:
              type: string
              nullable: true
              maxLength: 200
            university:
              type: integer
            student_type:
              enum:
              - Bachelor
              - Master
              - Phd
              type: string
            contract:
              type: integer
            sponsored_money:
              type: string
              readOnly: true
            sponsors:
              type: string
              maxLength: 200
          required:
          - first_name
          - last_name
          - father_name
          - university
          - student_type
          - contract
          - sponsors
          readOnly: true
        student_id:
          type: integer
          writeOnly: true
        money:
          type: integer
      required:
      - sponsor_id
      - student_id
      - money
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
